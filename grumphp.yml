#########
# Config
# @see https://github.com/phpro/grumphp
#
# Usage:
# - bin/grumphp run --tasks=<task1>,<task2>
#########

grumphp:
    stop_on_failure: true
    ignore_unstaged_changes: true
    parallel:
        enabled: true
        max_workers: 32

    fixer:
        enabled: false # Don't ask to fix.

    environment:
        variables: {}

    ##########################
    # TEST SUITES            #
    ##########################
    testsuites: 
      git_commit_msg:
          tasks: []

      git_pre_commit:
          tasks: []

      lint:
        tasks:
          # Fix code.
          - phpparser
          - phpcsfixer
          # Check code.
          - phpcpd
          - phpcs
          - phplint
          - phpmd
          - phpstan
          - make # run "phan"
        
      behav:
        tasks:
          - codeception
          - phpspec

      tests:
        tasks:
          - paratest
          - pest
          - phpunit

    #######################
    # TASKS               #
    #######################
    tasks: 
      git_commit_message:
        allow_empty_message: false
        enforce_capitalized_subject: true
        enforce_no_subject_trailing_period: true
        enforce_single_lined_subject: true
        max_subject_width: 120
        max_body_width: 500
        matchers:
          Must contain a short description: '/.+/'
        case_insensitive: false
        multiline: false
        metadata:
          priority: 100

      # git_branch_name:
      #       whitelist:
      #           - "/JIRA-\d+/"
      #       blacklist:
      #           - "develop"
      #           - "master"

      # only with git add and git commit
      #   git_blacklist:
      #       keywords:
      #           - "var_dump"
      #       whitelist_patterns: 
      #         - /^src\/(.*)/
      #       triggered_by: ['php']
      #       regexp_type: G
      #       match_word: false

      # max git filesize
      # file_size:
      #       max_size: 100M
      #       ignore_patterns: []

      ### Task COMPOSER #####################

      composer:
        file: composer.json
        no_check_all: true
        no_check_lock: true
        no_check_publish: true
        no_local_repository: true
        with_dependencies: false
        strict: false

      ### Task LINTERS ######################

      phpcsfixer:
        config: tools/linter/.php-cs-fixer.php

      # Analyse black-listed pattern
      phpparser:
        ignore_patterns: 
          - /^cest\/.*/
          - /^spec\/.*/
          - /^tests\/.*/
          - /deploy.php/
        visitors:
          no_exit_statements: ~
          never_use_else: ~ 
          forbidden_function_calls:
            blacklist:
            - 'd('
            - 'var_dump'
            - 'dump'
            - 'echo'
            - 'print' 
            - '_GET'
            - '_POST'
            - '_REQUEST'
        metadata:
            priority: 2

      phpcpd:
        directory: ['./src']

      phpcs:
        standard: tools/linter/phpcs.xml

      phplint:
        exclude: []
        jobs: ~
        short_open_tag: false
        ignore_patterns: []
        triggered_by: ['php', 'phtml']

      phpmd:
        ruleset: ['tools/linter/phpmd.xml']

      phpstan:
        configuration: tools/linter/phpstan.neon

      # phan is runned from make without ast extension

      ### Task Behaviors ###################

      codeception:
        config_file: tools/test/codeception.yml

      phpspec:
        config_file: tools/test/phpspec.yml

      make:
        make_file: Makefile
        task: phan

      ### Task Tests #######################

      infection:
        configuration: tools/test/infection.json

      paratest:
        configuration: tools/test/phpunit.xml

      pest:
        config_file: tools/test/phpunit.xml

      phpunit:
        config_file: tools/test/phpunit.xml

      # shell:
      #     scripts: []